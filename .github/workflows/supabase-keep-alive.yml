name: Supabase Keep Alive

on:
  schedule:
    - cron: '0 9 * * *'  # Runs at 9:00 AM UTC every day
  workflow_dispatch:      # Allows manual triggering through GitHub UI

jobs:
  keep-alive:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Supabase Client
        run: npm install @supabase/supabase-js

      - name: Verify Supabase Client Installation
        run: npm list @supabase/supabase-js

      - name: Ping Supabase Database
        run: |
          node -e "
          const { createClient } = require('@supabase/supabase-js');

          // Initialize Supabase client with GitHub secrets
          const supabaseUrl = '${{ secrets.SUPABASE_URL }}';
          const supabaseKey = '${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}';
          const supabase = createClient(supabaseUrl, supabaseKey);

          async function pingDatabase() {
            console.log('üîÑ Running Supabase keep-alive...');
            console.log(`üîó Connecting to: ${supabaseUrl}`);
            
            try {
              // Query the contact_submissions table
              const { data, error, count } = await supabase
                .from('contact_submissions')
                .select('id', { count: 'exact' })
                .limit(1);
              
              if (error) throw error;
              
              console.log('‚úÖ Connection successful!');
              console.log(`üìä Found ${count || 0} total records in contact_submissions table`);
              console.log('üü¢ Supabase keep-alive completed successfully');
              
              // Output record ID if available
              if (data && data.length > 0) {
                console.log(`üìù Sample record ID: ${data[0].id}`);
              } else {
                console.log('‚ö†Ô∏è No records found, but connection was successful');
              }
            } catch (error) {
              console.error('‚ùå Error connecting to Supabase:', error.message);
              process.exit(1);
            }
          }

          // Run the function and handle any uncaught errors
          pingDatabase().catch(err => {
            console.error('‚ùå Uncaught error:', err);
            process.exit(1);
          });
          "
